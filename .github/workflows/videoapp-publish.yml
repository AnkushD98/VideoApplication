name: Build and Publish WPF Application

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      # Install dependencies (restore NuGet packages)
      - name: Restore dependencies
        run: dotnet restore VideoApplication/VideoApplication.csproj

      # Build the solution
      - name: Build the solution
        run: dotnet build VideoApplication/VideoApplication.csproj --configuration Release --no-restore /p:RunCodeAnalysis=false

      # Publish the application (create a publish directory)
      - name: Publish the application
        run: dotnet publish VideoApplication/VideoApplication.csproj --configuration Release --self-contained -r win-x64 -p:PublishSingleFile=true --output ./VideoApp-publish

      # Create a ZIP archive using PowerShell
      - name: Create ZIP archive
        run: |
          Compress-Archive -Path ./VideoApp-publish/* -DestinationPath VideoApp-publish.zip

      # Upload the published application
      - name: Upload the published application
        uses: actions/upload-artifact@v4
        with:
          name: VideoApp-publish
          path: ./VideoApp/

  release:
    needs: build
    runs-on: windows-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Download publish artifact
      - name: Download publish artifact
        uses: actions/download-artifact@v4
        with:
          name: VideoApp-publish
          path: ./VideoApp/
        
      # List the contents of the root directory (for debugging)
      - name: List root directory
        run: ls -R

      # List the contents of the publish directory (after unzipping if necessary)
      - name: List publish directory after unzipping
        run: ls -R ./VideoApp-publish

      # Create a GitHub release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./VideoApp/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}